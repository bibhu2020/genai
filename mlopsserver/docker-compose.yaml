version: "3.9"

services:
  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
      # - MYSQL_DATABASE=zenml
    volumes:
      - ./_data/mysql:/var/lib/mysql  # ✅ MySQL data persisted locally
    networks:
      - zenml_net    

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"   # Console UI port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./_data/minio:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - zenml_net    

  zenml:
    image: zenmldocker/zenml-server
    ports:
      - "8237:8080"
    environment:
      - ZENML_STORE_URL=mysql://root:password@host.docker.internal/zenml
      - ZENML_SERVER_JWT_SECRET_KEY="x09a@3sad*Df42ad566bb"
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
      # - MINIO_ACCESS_KEY=minioadmin
      # - MINIO_SECRET_KEY=minioadmin
      # - MINIO_ENDPOINT=http://host.docker.internal:9000
      - MINIO_BUCKET=zenmlartifacts
    # volumes:
    #   - ./_data/zenml:/root/.config/zenml  # ✅ Persist ZenML config and token state
    links:
      - mysql
      - minio
    depends_on:
      - mysql
      - minio
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure
    networks:
      - zenml_net

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "5000:5000"
    volumes:
      - ./_data/mlflow:/mlflow          # ✅ Artifact root
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri sqlite:////mlflow/mlflow.db
      --default-artifact-root /mlflow/mlruns
    networks:
      - zenml_net

#   langwatch:
#     image: langwatch/langwatch:latest
#     ports:
#       - "3000:3000"
#     environment:
#       - DATABASE_URL=postgresql://langwatch:password@postgresdb:5432/langwatch
#       - LANGWATCH_API_KEY=xXX-kks-8jjs-kks-8jjs-kks
#     depends_on:
#       - postgresdb

#   postgresdb:
#     image: postgres:14
#     restart: always
#     environment:
#       POSTGRES_USER: langwatch
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: langwatch
#     volumes:
#       - ./_data/pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata:

networks:
  zenml_net:
    driver: bridge
