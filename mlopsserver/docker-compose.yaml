version: "3.9"

services:
  mysql:
    image: mysql:8.0
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${ZENML_DB}  # ✅ ZenML database
    volumes:
      - ./_data/mysql:/var/lib/mysql  # ✅ MySQL data persisted locally
      - ./_data/mysql-init:/docker-entrypoint-initdb.d  # ✅ Init scripts
    networks:
      - backend

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"   # Console UI port
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./_data/minio:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - frontend
      - backend

  zenml:
    image: zenmldocker/zenml-server
    ports:
      - "${ZENML_PORT}:8080"
    environment:
      - ZENML_STORE_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@host.docker.internal/zenml
      - ZENML_SERVER_JWT_SECRET_KEY=${ZENML_SERVER_JWT_SECRET_KEY}
      - AWS_ENDPOINT_URL=http://minio:${MINIO_PORT}
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_REGION=us-east-1
      - MINIO_BUCKET=${ZENML_BUCKET_NAME}
    links:
      - mysql
      - minio
    depends_on:
      - mysql
      - minio
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure
    networks:
      - frontend
      - backend
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  mlflow:
    # image: ghcr.io/mlflow/mlflow:latest
    build: .
    ports:
      - "${MLFLOW_PORT}:5000"
    volumes:
      - ./_data/mlflow:/mlflow          # ✅ Artifact root
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_REGION=us-east-1
      - MLFLOW_S3_ENDPOINT_URL=http://minio:${MINIO_PORT}
      - MLFLOW_S3_IGNORE_TLS=true
    depends_on:
      - mysql
      - minio
    command: >
      mlflow server
      --host 0.0.0.0
      --port ${MLFLOW_PORT}
      --backend-store-uri mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@mysql:${MYSQL_PORT}/mlflow_db
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
